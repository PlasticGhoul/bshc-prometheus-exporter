name: Release

on:
  release:
    types: [created]

jobs:
  preparation:
    runs-on: ubuntu-latest
    name: "Preparation"

    steps:
    - name: DEBUG
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
        echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
        echo "GITHUB_SHA: $GITHUB_SHA"
        echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"

  build_golang:
    needs: preparation
    runs-on: ubuntu-latest
    name: "Build: Golang"

    env:
      GO_VERSION: 1.23.4
      SRC_PATH: ${{ github.workspace }}/src
      ARTIFACT_PATH: ${{ github.workspace }}/bin
      ARTIFACT_NAME: bshc-prometheus-exporter

    permissions:
      contents: write
      packages: write
      id-token: write

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Install Dependencies
      run: go mod download && go mod verify
      working-directory: ${{ env.SRC_PATH }}
    
    - name: Build Project
      run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o ${{ env.ARTIFACT_PATH }}/${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}_${{ matrix.goos }}-${{ matrix.goarch }} ./...
      working-directory: ${{ env.SRC_PATH }}

    - name: Get Release URL
      id: get_release_url
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_url.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_PATH }}/${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}_${{ matrix.goos }}-${{ matrix.goarch }}
        asset_name: ${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}_${{ matrix.goos }}-${{ matrix.goarch }}
        asset_content_type: application/octet-stream

  build_docker:
    needs: build_golang
    runs-on: ubuntu-latest
    name: "Build: Docker"

    env:
      GO_VERSION: 1.23.4
      SRC_PATH: ${{ github.workspace }}/src
      ARTIFACT_NAME: bshc-prometheus-exporter

    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate Docker Metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: plasticghoul/${ env.ARTIFACT_NAME }
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Download Release Asset
      uses: robinraju/release-downloader@v1
      with:
        tag: ${{ github.ref_name }}
        filename: "*"
        out-file-path: ${{ github.workspace }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/arm64,linux/amd64
        file: docker/Dockerfile
        push: true
        tags: |
          ghcr.io/plasticghoul/${{ env.ARTIFACT_NAME }}:latest
          ghcr.io/plasticghoul/${{ env.ARTIFACT_NAME }}:${{ github.ref_name }}
        build-args: |
          ARTIFACT_NAME=${{ env.ARTIFACT_NAME }}
          ARTIFACT_VERSION=${{ github.ref_name }}